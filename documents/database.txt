
-- users
CREATE TABLE users (
    id SERIAL PRIMARY KEY NOT NULL,
    fName VARCHAR(255) NOT NULL,
    mName VARCHAR(255) NULL,
    lName VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);

-- inventory
CREATE TABLE categories (
    categoryId SERIAL PRIMARY KEY NOT NULL,
    categoryName VARCHAR(255) NOT NULL
);

CREATE TABLE inventory (
    id SERIAL PRIMARY KEY NOT NULL,
    iName VARCHAR(255) NOT NULL,  
    quantity INT DEFAULT 0,
    iPrice INT NOT NULL,
    dateAdded DATE NOT NULL,
    categoryId INT REFERENCES categories(categoryId) NOT NULL,
    isFunctional BOOLEAN DEFAULT TRUE
);

----- ARCHIVE ------

CREATE TABLE document_type (
    doctypeId SERIAL PRIMARY KEY,
    typeName VARCHAR(50) NOT NULL -- Examples: Panumduman, Lupon, Ordinance, etc.
);

INSERT INTO document_type (typeName) VALUES 
    ('Panumduman'),
    ('Lupon'),
    ('Ordinance'),
    ('Resolution'),
    ('Regularization Minutes');

CREATE TABLE archive (
    archiveId SERIAL PRIMARY KEY,
    doctypeId INT NOT NULL, -- Refers to the document type (e.g., Panumduman, Lupon, etc.)
    FOREIGN KEY (doctypeId) REFERENCES document_type(doctypeId)
);

CREATE TABLE panumduman (
    panumdumanId SERIAL PRIMARY KEY,
    archiveId INT NOT NULL,
    date DATE NOT NULL,
    image VARCHAR(255), -- Path to the image
    contractingPersons TEXT NOT NULL, -- JSON or long text for flexibility
    FOREIGN KEY (archiveId) REFERENCES archive(archiveId)  ON DELETE CASCADE
);

CREATE TABLE lupon (
    luponId SERIAL PRIMARY KEY,
    archiveId INT NOT NULL,
    caseNumber VARCHAR(50) NOT NULL, -- Unique identifier for the case
    complainant TEXT NOT NULL,
    respondent TEXT NOT NULL,
    dateFiled DATE NOT NULL,
    image VARCHAR(255), -- Path to the image
    caseType VARCHAR(100), -- Example: Civil, Criminal, etc.
    FOREIGN KEY (archiveId) REFERENCES archive(archiveId)  ON DELETE CASCADE
);

CREATE TABLE ordinance (
    ordinanceId SERIAL PRIMARY KEY,
    archiveId INT NOT NULL,
    ordinanceNumber VARCHAR(50) NOT NULL,
    title VARCHAR(255) NOT NULL,
    authors TEXT NOT NULL, -- JSON or text to store 2-3 authors
    coAuthors TEXT, -- Optional JSON or text for co-authors
    sponsors TEXT, -- Optional JSON or text for sponsors
    image VARCHAR(255), -- Path to the image
    dateApproved DATE NOT NULL,
    FOREIGN KEY (archiveId) REFERENCES archive(archiveId)  ON DELETE CASCADE
);

CREATE TABLE resolution (
    resolutionId SERIAL PRIMARY KEY,
    archiveId INT NOT NULL,
    resolutionNumber VARCHAR(50) NOT NULL,
    seriesYear INT NOT NULL,
    image VARCHAR(255), -- Path to the image
    date DATE NOT NULL,
    FOREIGN KEY (archiveId) REFERENCES archive(archiveId)  ON DELETE CASCADE
);

CREATE TABLE regularization_minutes (
    regularizationId SERIAL PRIMARY KEY,
    archiveId INT NOT NULL,
    regulationNumber INT NOT NULL,
    image VARCHAR(255), -- Path to the image
    date DATE NOT NULL,
    FOREIGN KEY (archiveId) REFERENCES archive(archiveId) ON DELETE CASCADE
);

-- residents
CREATE TABLE rClassification (
    rClassificationId SERIAL PRIMARY KEY NOT NULL,
    rClassificationName VARCHAR(255) NOT NULL
);

CREATE TABLE contactPerson(
     contactPersonId SERIAL PRIMARY KEY NOT NULL,
     fName VARCHAR(255) NOT NULL,         
     mName VARCHAR(255) NULL,             
     lName VARCHAR(255) NOT NULL,         
     street VARCHAR(255) NULL,            
     purok VARCHAR(255) NULL,             
     barangay VARCHAR(255) NULL,          
     city VARCHAR(255) NULL,              
     province VARCHAR(255) NULL,          
     contactNumber VARCHAR(50) NULL       
);

CREATE TABLE residents (
    residentsId SERIAL PRIMARY KEY NOT NULL,
    globalId VARCHAR(255) NOT NULL UNIQUE, 
    idNumber VARCHAR(255) NULL, 
    fName VARCHAR(255) NOT NULL,           
    mName VARCHAR(255) NULL,               
    lName VARCHAR(255) NOT NULL,           
    street VARCHAR(255) NULL,    
    purok VARCHAR(255) NULL,     
    barangay VARCHAR(255) NULL,  
    city VARCHAR(255) NULL,      
    province VARCHAR(255) NULL,  
    birthDate DATE NOT NULL,                
    birthPlace VARCHAR(255) NULL,           
    age INT NOT NULL,                       
    gender VARCHAR(10) NULL CHECK (gender IN ('Male', 'Female')),  
    picture TEXT DEFAULT '',                                       
    signature TEXT DEFAULT '',
    eAttainment VARCHAR(255) NULL,                                 
    occupation VARCHAR(255) NULL,                                  
    income INT NULL,                                               
    civilStatus VARCHAR(50) NULL CHECK (civilStatus IN ('Single', 'Married', 'Divorced', 'Widow', 'Widower')),   
    isResident BOOLEAN NULL,                                              
    emergencyContactId INT REFERENCES contactPerson(contactPersonId) ON DELETE CASCADE NOT NULL,       
    rClassificationId INT REFERENCES rClassification(rClassificationId) ON DELETE CASCADE NOT NULL,
    isSenior BOOLEAN DEFAULT FALSE,
    isPwd BOOLEAN DEFAULT FALSE,              
    isSoloParent BOOLEAN DEFAULT FALSE,       
    isYouth BOOLEAN DEFAULT FALSE,            
    is4ps BOOLEAN DEFAULT FALSE,              
    isOutOfSchoolYouth BOOLEAN DEFAULT FALSE, 
    isSkm BOOLEAN DEFAULT FALSE,              
    isKm BOOLEAN DEFAULT FALSE                  
);

CREATE TABLE boarders (
    boardID SERIAL PRIMARY KEY NOT NULL,
    boarderInResidentId INT REFERENCES residents(residentsId) ON DELETE CASCADE NOT NULL,
    originalStreet VARCHAR(255) NULL,     
    originalPurok VARCHAR(255) NULL,      
    originalBarangay VARCHAR(255) NULL,   
    originalCity VARCHAR(255) NULL,       
    originalProvince VARCHAR(255) NULL,   
    boardinghouseName VARCHAR(255) NULL,   
    landlord VARCHAR(255) NULL             
);

-- documents requests
CREATE TABLE requests (
    id SERIAL PRIMARY KEY NOT NULL,
    residentsId INT REFERENCES residents(residentsId) NOT NULL,    
    dateAdded DATE NULL,
    purpose TEXT NULL,
    isReleased BOOLEAN DEFAULT FALSE
);

--inserts
INSERT INTO rClassification (rClassificationName) VALUES 
    ('Government employee'),
    ('Private employee'),
    ('Carpenters'),
    ('Farmers'),
    ('Fisherman'),
    ('Business entrepreneurs'),
    ('Drivers'),
    ('OFW'),
    ('Kasambahay'),
    ('Boarders'),
    ('Entrepreneur'),
    ('Unemployed'),
    ('None');

CREATE TABLE house_classification (
    id SERIAL PRIMARY KEY NOT NULL,
    date DATE NOT NULL DEFAULT CURRENT_DATE,
    purok VARCHAR(255) NULL, 
    houseNumber INT NULL,
    houseRepresentative VARCHAR(255) NOT NULL,
    numberOfFamilies INT NOT NULL,
    isWithCr BOOLEAN DEFAULT FALSE,
    isWith40mZone BOOLEAN DEFAULT FALSE,
    isEnergized BOOLEAN DEFAULT FALSE,
    housingMaterials VARCHAR(50) NULL CHECK (housingMaterials IN ('Concrete', 'Semi-Concrete', 'Wood')),
    waterSource VARCHAR(255) NOT NULL
);

CREATE TABLE barangay_officials (
    id SERIAL PRIMARY KEY NOT NULL,
    
    -- Punong Barangay
    punongBarangayLastName VARCHAR(255) NOT NULL,
    punongBarangayFirstName VARCHAR(255) NOT NULL,
    punongBarangayMiddleName VARCHAR(255),
    punongBarangayImage TEXT,

    -- Kagawad 1
    kagawad1LastName VARCHAR(255) NOT NULL,
    kagawad1FirstName VARCHAR(255) NOT NULL,
    kagawad1MiddleName VARCHAR(255),
    kagawad1Image TEXT,

    -- Kagawad 2
    kagawad2LastName VARCHAR(255) NOT NULL,
    kagawad2FirstName VARCHAR(255) NOT NULL,
    kagawad2MiddleName VARCHAR(255),
    kagawad2Image TEXT,

    -- Kagawad 3
    kagawad3LastName VARCHAR(255) NOT NULL,
    kagawad3FirstName VARCHAR(255) NOT NULL,
    kagawad3MiddleName VARCHAR(255),
    kagawad3Image TEXT,

    -- Kagawad 4
    kagawad4LastName VARCHAR(255) NOT NULL,
    kagawad4FirstName VARCHAR(255) NOT NULL,
    kagawad4MiddleName VARCHAR(255),
    kagawad4Image TEXT,

    -- Kagawad 5
    kagawad5LastName VARCHAR(255) NOT NULL,
    kagawad5FirstName VARCHAR(255) NOT NULL,
    kagawad5MiddleName VARCHAR(255),
    kagawad5Image TEXT,

    -- Kagawad 6
    kagawad6LastName VARCHAR(255) NOT NULL,
    kagawad6FirstName VARCHAR(255) NOT NULL,
    kagawad6MiddleName VARCHAR(255),
    kagawad6Image TEXT,

    -- Kagawad 7
    kagawad7LastName VARCHAR(255) NOT NULL,
    kagawad7FirstName VARCHAR(255) NOT NULL,
    kagawad7MiddleName VARCHAR(255),
    kagawad7Image TEXT,

    -- SK Chairperson
    SKChairpersonLastName VARCHAR(255) NOT NULL,
    SKChairpersonFirstName VARCHAR(255) NOT NULL,
    SKChairpersonMiddleName VARCHAR(255),
    SKChairpersonImage TEXT,

    -- Barangay Secretary
    barangaySecretaryLastName VARCHAR(255) NOT NULL,
    barangaySecretaryFirstName VARCHAR(255) NOT NULL,
    barangaySecretaryMiddleName VARCHAR(255),
    barangaySecretaryImage TEXT,

    -- Barangay Treasurer
    barangayTreasurerLastName VARCHAR(255) NOT NULL,
    barangayTreasurerFirstName VARCHAR(255) NOT NULL,
    barangayTreasurerMiddleName VARCHAR(255),
    barangayTreasurerImage TEXT
);

isResident
last_name
first_name
middle_name
gender
birthdate
age
educAttainment
occupation
sectors
placeOfBirth
grossIncome
civilStatus
senior
soloParent
pwd
youth
is4ps
isOutOfSchoolYouth
isSkm
isKm
purok
street
barangay
city
province

purok1
street1
barangay1
city1
province1
boardinghouse
landlord
emergencyLastName
emergencyFirstName
emergencyMiddleName
emergencyContactNumber
emergencyPurok
emergencyStreet
emergencyBarangay
emergencyCity
emergencyProvince
fileInput

inputs in archive:

-- for Lupon
doctype
luponCaseNumber
complainant
respondent
dateFiled
caseType
fileInput

-- for panumduman

parties1
parties2
date

-- for regularization Minutes

regulationNumber
dates

-- for resolution

resolutionNumber
yearSeries
date

-- for ordinance

ordinanceNumber
ordinanceTitle
date
author1
coAuthor1
sponsor1